---
# Section 1 Fixes
- name: "NOTSCORED | 1.1 | AUDIT | Ensure the Pre-Installation Planning Checklist Has Been Implemented"
  debug:
      msg:
          - "Warning! Make sure you have your pre-installation checklist completed"
          - "Please refer to control 1.1 in the benchmark document for those items"
  when:
      - apache_cis_1_1
      - apache_cis_section1
  tags:
      - level 1
      - level 2
      - notscored
      - audit
      - rule_1.1

- name: "NOTSCORED | 1.2 | AUDIT | Ensure the Server Is Not a Multi-Use System"
  block:
      - name: "NOT SCORED | 1.2 | AUDIT | Ensure the Server Is Not a Multi-Use System | Gather running services for review"
        command: systemctl list-units --type=service --no-pager
        changed_when: false
        failed_when: false
        register: apache_ubuntu_1_2_running_services

      - name: "NOTSCORED | 1.2 | AUDIT | Ensure the Server Is Not a Multi-Use System | Display running services"
        debug:
            msg:
                - "Warning! Below are the running services. Please review"
                - "Servers should only be single service"
                - "{{ apache_ubuntu_1_2_running_services.stdout_lines }}"
  when:
      - apache_cis_1_2
      - apache_cis_section1
  tags:
      - level1
      - level2
      - notscored
      - audit
      - rule_1.2

- name: "NOTSCORED | 1.3 | PATCH | Ensure Apache Is Installed From the Appropriate Binaries"
  apt:
      name: apache2
      state: present
  when:
      - apache_cis_1_1
      - apache_cis_section1
      - apache_cis_disruption_high
  tags:
      - level1
      - level2
      - notscored
      - audit
      - rule_1.3

# Section 2 Fixes
- name: "NOTSCORED | 2.1 | AUDIT | Ensure Only Necessary Authentication and Authorization Modules Are Enabled"
  block:
      - name: "NOT SCORED | 2.1 | AUDIT | Ensure Only Necessary Authentication and Authorization Modules Are Enabled | Capture Auth modules"
        shell: apache2ctl -M
        changed_when: false
        failed_when: false
        register: apache_ubuntu_2_1_loaded_modules

      - name: "NOTSCORED | 2.1 | AUDIT | Ensure Only Necessary Authentication and Authorization Modules Are Enabled | Display Modules"
        debug:
            msg:
                - "Warning! Below are the installed modules. Please review and remove any un-needed modules"
                - "Auth Modules:"
                - "{{ apache_ubuntu_2_1_loaded_modules.stdout_lines }}"
  when:
      - apache_cis_2_1
      - apache_cis_section2
  tags:
      - level1
      - level2
      - notscored
      - audit
      - rule_2.1

- name: "SCORED | 2.2 | PATCH | Ensure the Log Config Module Is Enabled"
  block:
      - name: "SCORED | 2.2 | PATCH | Ensure the Log Config Module Is Enabled | Check to see if mod_log_config already exists"
        shell: apachectl -l | grep mod_log_config
        changed_when: false
        failed_when: false
        register: apache_ubuntu_2_2_mod_log_config_state

      - name: "SCORED | 2.2 | PATCH | Ensure the Log Config Module Is Enabled | Enable mod_log_config if not enabled"
        command: a2enmod mod_log_config
        changed_when: apache_ubuntu_2_2_mod_log_config_enabled.rc == 0
        failed_when: apache_ubuntu_2_2_mod_log_config_enabled.rc >=1
        register: apache_ubuntu_2_2_mod_log_config_enabled
        when: apache_ubuntu_2_2_mod_log_config_state == ""
  when:
      - apache_cis_2_2
      - apache_cis_section2
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_2.2

- name: "SCORED | 2.3 | PATCH | Ensure the WebDAV Modules Are Disabled | Check for enabled WebDAV Module"
  apache2_module:
      name: "{{ item }}"
      state: absent
      force: yes
  with_items:
      - dav_fs
      - dav
      - dav_lock
  notify: restart apache2
  when:
      - apache_cis_2_3
      - apache_cis_section2
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_2.3

- name: "SCORED | 2.4 | PATCH | Ensure the Status Module Is Disabled"
  apache2_module:
      name: status
      state: absent
      force: yes
  notify: restart apache2
  when:
      - apache_cis_2_4
      - apache_cis_section2
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_2.4

- name: "SCORED | 2.5 | PATCH | Ensure the Autoindex Module Is Disabled"
  apache2_module:
      name: autoindex
      state: absent
      force: yes
  notify: restart apache2
  when:
      - apache_cis_2_5
      - apache_cis_section2
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_2.5

- name: "SCORED | 2.6 | PATCH | Ensure the Proxy Modules Are Disabled"
  apache2_module:
      name: "{{ item }}"
      state: absent
      force: yes
  with_items:
      - proxy_ajp
      - proxy_balancer
      - proxy
      - proxy_connect
      - proxy_express
      - proxy_fcgi
      - proxy_fdpass
      - proxy_ftp
      - proxy_hcheck
      - proxy_html
      - proxy_http2
      - proxy_http
      - proxy_scgi
      - proxy_uwsgi
      - proxy_wstunnel
  notify: restart apache2
  when:
      - apache_cis_2_6
      - apache_cis_section2
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_2.6

- name: "SCORED | 2.7 | PATCH | Ensure the User Directories Module Is Disabled"
  apache2_module:
      name: userdir
      state: absent
      force: yes
  notify: restart apache2
  when:
      - apache_cis_2_7
      - apache_cis_section2
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_2.7

- name: "SCORED | 2.8 | PATCH | Ensure the Info Module Is Disabled"
  apache2_module:
      name: info
      state: absent
      force: yes
  notify: restart apache2
  when:
      - apache_cis_2_8
      - apache_cis_section2
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_2.8

- name: "SCORED | 2.9 | PATCH | Ensure the Basic and Digest Authentication Modules are Disabled"
  apache2_module:
      name: "{{ item }}"
      state: absent
      force: yes
  with_items:
      - auth_basic
      - auth_digest
  notify: restart apache2
  when:
      - apache_cis_2_9
      - apache_cis_section2
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_2.9

# Section 3 Fixes
- name: "SCORED | 3.1 | PATCH | Ensure the Apache Web Server Runs As a Non-Root User"
  block:
      - name: "SCORED | 3.1 | AUDIT | Ensure the Apache Web Server Runs As a Non-Root User | Get configured user block"
        block:
            - name: "SCORED | 3.1 | AUDIT | Ensure the Apache Web Server Runs As a Non-Root User | Get configured user"
              shell: ps aux | grep apache
              changed_when: false
              failed_when: false
              register: apache_ubuntu_3_1_configured_user_group
      
            - name: "SCORED | 3.1 | AUDIT | Ensure the Apache Web Server Runs As a Non-Root User | Warn about user"
              debug:
                  msg:
                      - "Warning! Below is the user and group for the apache service"
                      - "Please review to confirm it is a non-root user"
                      - "This task did not change the user information due to apache_cis_disruption_high being set to false"
                      - "Set that parameter to true and this task will create the user/group and configure as needed"
                      - "{{ apache_ubuntu_3_1_configured_user_group.stdout_lines }}"
              when: not apache_cis_disruption_high

      - name: "SCORED | 3.1 | PATCH | Ensure the Apache Web Server Runs As a Non-Root User"
        block:
            - name: "SCORED | 3.1 | PATCH | Ensure the Apache Web Server Runs As a Non-Root User | Stop apache service"
              service:
                  name: apache2
                  state: stopped

            - name: "SCORED | 3.1 | PATCH | Ensure the Apache Web Server Runs As a Non-Root User | Create Apache group"
              group:
                  name: "{{ apache_ubuntu_group }}"
                  system: yes
                  state: present

            - name: "SCORED | 3.1 | PATCH | Ensure the Apache Web Server Runs As a Non-Root User | Create Apache user"
              user:
                  name: "{{ apache_ubuntu_user }}"
                  system: yes
                  group: "{{ apache_ubuntu_group }}"
                  home: /var/www
                  shell: /sbin/nologin

            - name: "SCORED | 3.1 | PATCH | Ensure the Apache Web Server Runs As a Non-Root User | Add user to configs"
              replace:
                  path: "{{ apache2_cis_server_root_dir }}/apache2.conf"
                  regexp: "{{ item.regexp }}"
                  replace: "{{ item.replace }}"
              with_items:
                  - { regexp: 'User .*', replace: 'User {{ apache_ubuntu_user }}' }
                  - { regexp: 'Group .*', replace: 'Group {{ apache_ubuntu_group }}' }
            - name: "SCORED | 3.1 | PATCH | Ensure the Apache Web Server Runs As a Non-Root User | Start apache service"
              service:
                  name: apache2
                  state: started
        when: apache_cis_disruption_high
  when:
      - apache_cis_3_1
      - apache_cis_section3
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_3.1

- name: "SCORED | 3.2 | PATCH | Ensure the Apache User Account Has an Invalid Shell"
  user:
      name: "{{ apache_ubuntu_user }}"
      shell: /sbin/nologin
  when:
      - apache_cis_3_2
      - apache_cis_section3
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_3.2

- name: "SCORED | 3.3 | PATCH | Ensure the Apache User Account Is Locked"
  user:
      name: "{{ apache_ubuntu_user }}"
      password_lock: yes
  when:
      - apache_cis_3_3
      - apache_cis_section3
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_3.3

# -----------------------------
# -----------------------------
# Confirm /etc/httpd only folder we need to adjust
# -----------------------------
# -----------------------------
- name: "SCORED | 3.4 | PATCH | Ensure Apache Directories and Files Are Owned By Root"
  file:
      name: "{{ apache2_cis_server_root_dir }}"
      owner: root
      recurse: yes
  when:
      - apache_cis_3_4
      - apache_cis_section3
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_3.4

# -----------------------------
# -----------------------------
# Confirm /etc/httpd only folder we need to adjust
# -----------------------------
# -----------------------------

- name: "SCORED | 3.5 | PATCH | Ensure the Group Is Set Correctly on Apache Directories and Files"
  file:
      name: "{{ apache2_cis_server_root_dir }}"
      group: root
      recurse: yes
  when:
      - apache_cis_3_5
      - apache_cis_section3
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_3.5

- name: "SCORED | 3.6 | PATCH | Ensure Other Write Access on Apache Directories and Files Is Restricted"
  file:
      name: "{{ apache2_cis_server_root_dir }}"
      mode: o-w
      recurse: yes
  when:
      - apache_cis_3_6
      - apache_cis_section3
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_3.6

- name: "SCORED | 3.7 | PATCH | Ensure the Core Dump Directory Is Secured"
  block:
      - name: "SCORED | 3.7 | AUDIT | Ensure the Core Dump Directory Is Secured | Find if CoreDumpDirectory is used"
        shell: cat {{ apache2_cis_server_root_dir }}/apache2.conf | grep "CoreDumpDirectory" | cut -f2 -d " "
        changed_when: false
        failed_when: false
        register: apache_ubuntu_3_7_coredumpdirectory

      # - name: "SCORED | 3.7 | AUDIT | Ensure the Core Dump Directory Is Secured | Find Web Document Root Dir"
      #   shell: cat {{ apache2_cis_server_root_dir }}/apache2.conf | grep "DocumentRoot " | cut -f2 -d'"'
      #   changed_when: false
      #   failed_when: false
      #   register: apache_ubuntu_3_7_docrootdir

      - name: "SCORED | 3.7 | AUDIT | Ensure the Core Dump Directory Is Secured | Message if CoreDumpDirectory is Web Document Root Dir"
        debug:
            msg: "WARNING!! Your CoreDumpDirectory is using the Web Document Root directory: {{ apache_ubuntu_3_7_coredumpdirectory.stdout }}"
        when: 
            - apache_ubuntu_3_7_coredumpdirectory.stdout == apache2_cis_doc_root_dir

      - name: "SCORED | 3.7 | PATCH | Ensure the Core Dump Directory Is Secured | Set CoreDumpDirectory in apache2.conf"
        lineinfile:
            path: "{{ apache2_cis_server_root_dir }}/apache2.conf"
            regexp: '^CoreDumpDirectory '
            line: 'CoreDumpDirectory {{ apache_cis_core_dump_location }}'
        notify: restart apache2
        when: apache_ubuntu_3_7_coredumpdirectory.stdout == ""

      - name: "SCORED | 3.7 | PATCH | Ensure the Core Dump Directory Is Secured"
        file:
            name: "{{ apache_cis_core_dump_location }}"
            owner: root
            group: apache
            mode: o-rwx
            recurse: yes
  when:
      - apache_cis_3_7
      - apache_cis_section3
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_3.7

# LockFile is no longer the valid parameter, it was replaced with Mutex File
- name: "SCORED | 3.8 | PATCH | Ensure the Lock File Is Secured"
  block:
      - name: "SCORED | 3.8 | PATCH | Ensure the Lock File Is Secured | Add LockFile directive if needed"
        lineinfile:
            path: "{{ apache2_cis_server_root_dir }}/apache2.conf"
            regexp: '^LockFile|^Mutex File'
            line: 'Mutex File:{{ apache2_cis_lockfile_location }} default'
            insertafter: '# Supplemental configuration'
        notify: restart apache2

      - name: "SCORED | 3.8 | PATCH | Ensure the Lock File Is Secured | Create LockFile in new location and set permissions if does not exist"
        file:
            path: "{{ apache2_cis_lockfile_location }}/apache2.lock"
            owner: root
            group: root
            mode: '0750'
            state: touch

      - name: "SCORED | 3.8 | PATCH | Ensure the Lock File Is Secured | Set LockFile permissions"
        file:
            path: "{{ apache2_cis_lockfile_location }}/apache2.lock"
            owner: root
            group: root
            mode: '0750'
  when:
      - apache_cis_3_8
      - apache_cis_section3
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_3.8

- name: "SCORED | 3.9 | PATCH | Ensure the Pid File Is Secured"
  block:
      - name: "SCORED | 3.9 | AUDIT | Ensure the Pid File Is Secured | Get PID location"
        shell: find / -name apache2.pid
        changed_when: false
        failed_when: false
        register: apache_ubuntu_3_9_apache2_pid_loc

      - name: "SCORED | 3.9 | PATCH | Ensure the Pid File Is Secured | Set permissions"
        file:
            path: "{{ apache_ubuntu_3_9_apache2_pid_loc.stdout }}"
            owner: root
            group: root
            mode: o-w,g-w

      - name: "SCORED | 3.9 | AUDIT | Ensure the Pid File Is Secured | Warn if PID is in DocumentRoot dir"
        debug:
            msg:
                - "WARNING!! Your PID file is in the DocumentRoot directory, to confirm with this STIG control"
                - "please move to another folder that is not within the Document root directory ({{ apache2_cis_doc_root_dir.stdout }})"
        when: apache2_cis_doc_root_dir == apache_ubuntu_3_9_apache2_pid_loc.stdout
  when:
      - apache_cis_3_9
      - apache_cis_section3
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_3.9

# -----------------------------
# -----------------------------
# Missing last step to confirm ScoreBoardFile location is not on an externally mounted NFS system. Need to review how to do that
# -----------------------------
# -----------------------------
- name: "SCORED | 3.10 | PATCH | Ensure the ScoreBoard File Is Secured"
  block:
      - name: "SCORED | 3.10 | AUDIT | Ensure the ScoreBoard File Is Secured | Check if ScoreBoardFile is in use"
        shell: cat {{ apache2_cis_server_root_dir }}/apache2.conf | grep ScoreBoardFile | cut -f2 -d" "
        changed_when: false
        failed_when: false
        register: apache_ubuntu_3_10_scoreboardfile

      - name: "SCORED | 3.10 | AUDIT | Ensure the ScoreBoard File Is Secured | Warn if the same as DocumentRoot"
        debug:
            msg:
                - "WARNING!! The ScoreBoardFile parameter is in use using the DocumentRoot location"
                - "This does not conform to CIS standars. Please change the ScoreBoardFile location in {{ apache2_cis_server_root_dir }}/apache2.conf"
        when: 
            - '"{{ apache2_cis_doc_root_dir }}" in apache_ubuntu_3_10_scoreboardfile.stdout'

      - name: "SCORED | 3.10 | PATCH | Ensure the ScoreBoard File Is Secured | Update file permissions"
        file:
            path: "{{ apache_ubuntu_3_10_scoreboardfile.stdout }}"
            owner: root
            group: root
            mode: o-w,g-w
        when: apache_ubuntu_3_10_scoreboardfile.stdout != ""
  when:
      - apache_cis_3_10
      - apache_cis_section3
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_3.10
      - notimplimented

# -----------------------------
# -----------------------------
# Confirm /etc/httpd only folder we need to adjust
# -----------------------------
# -----------------------------
- name: "SCORED | 3.11 | PATCH | Ensure Group Write Access for the Apache Directories and Files Is Properly Restricted"
  file:
      path: "{{ apache2_cis_server_root_dir }}"
      mode: g-w
      recurse: yes
  when:
      - apache_cis_3_11
      - apache_cis_section3
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_3.11

- name: "SCORED | 3.12 | PATCH | Ensure Group Write Access for the Document Root Directories and Files Is Properly Restricted"
  file:
      path: "{{ apache2_cis_doc_root_dir }}"
      mode: g-w
      recurse: yes
  when:
      - apache_cis_3_12
      - apache_cis_section3
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_3.12

# -----------------------------
# -----------------------------
# Control 3.13 circle back since I'm not sure what is needed here. You are setting values but I can't figure out where those configurations are located
# -----------------------------
# -----------------------------

- name: "NOTSCORED | 3.13 | PATCH | Ensure Access to Special Purpose Application Writable Directories is Properly Restricted"
  command: /bin/true
  changed_when: false
  failed_when: false
  when:
      - apache_cis_3_13
      - apache_cis_section3
  tags:
      - level1
      - level2
      - notscored
      - patch
      - rule_3.13
      - notimplimented

# Section 4 Fixes
- name: "SCORED | 4.1 | PATCH | Ensure Access to OS Root Directory Is Denied By Default"
  block:
      - name: "SCORED | 4.1 | AUDIT | Ensure Access to OS Root Directory Is Denied By Default | Get Root Directory"
        shell: cat {{ apache2_cis_server_root_dir }}/apache2.conf | sed -n '/<Directory \/>/,/<\/Directory/p'
        changed_when: false
        failed_when: false
        register: apache_ubuntu_4_1_root_directory

      - name: "SCORED | 4.1 | PATCH | Ensure Access to OS Root Directory Is Denied By Default | Repace Require if exists"
        replace:
            path: "{{ apache2_cis_server_root_dir }}/apache2.conf"
            regexp: 'Require .*'
            replace: 'Require all denied'
            after: '<Directory />'
            before: '</Directory>'
        notify: restart apache2
        when: '"Require" in apache_ubuntu_4_1_root_directory.stdout'

      - name: "SCORED | 4.1 | PATCH | Ensure Access to OS Root Directory Is Denied By Default | Enter Require if it doesn't exist"
        lineinfile:
            path: "{{ apache_cis_server_root_dir }}/apache2.conf"
            regexp: '<Directory />'
            line: |
                <Directory />
                        Require all denied
        notify: restart apache2
        when: '"Require" not in apache_ubuntu_4_1_root_directory.stdout'
  when:
      - apache_cis_4_1
      - apache_cis_section4
  tags:
      - level1
      - level2
      - patch
      - rule_4.1

# -----------------------------
# -----------------------------
# Control 4.2 requires dynamic changes to all <Directory> and <Location> elements. Need to figure out best lineinfile way to handle this
# -----------------------------
# -----------------------------

- name: "NOTSCORED | 4.2 | PATCH | Ensure Appropriate Access to Web Content Is Allowed"
  command: /bin/true
  changed_when: false
  failed_when: false
  when:
      - apache_cis_4_2
      - apache_cis_section4
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_4.2
      - notimplimented

- name: "SCORED | 4.3 | PATCH | Ensure OverRide Is Disabled for the OS Root Directory"
  block:
      - name: "SCORED | 4.3 | AUDIT | Ensure OverRide Is Disabled for the OS Root Directory | Get Root Directory"
        shell: cat {{ apache2_cis_server_root_dir }}/apache2.conf | sed -n '/<Directory \/>/,/<\/Directory/p'
        changed_when: false
        failed_when: false
        register: apache_ubuntu_4_3_root_directory

      - name: "SCORED | 4.3 | PATCH | Ensure OverRide Is Disabled for the OS Root Directory | Repace AllowOverride if exists"
        replace:
            path: "{{ apache2_cis_server_root_dir }}/apache2.conf"
            regexp: 'AllowOverride .*'
            replace: 'AllowOverride None'
            after: '<Directory />'
            before: '</Directory>'
        notify: restart apache2
        when: '"AllowOverride" in apache_ubuntu_4_3_root_directory.stdout'

      - name: "SCORED | 4.3 | PATCH | Ensure OverRide Is Disabled for the OS Root Directory | Enter AllowOverride if it doesn't exist"
        lineinfile:
            path: "{{ apache2_cis_server_root_dir }}/apache2.conf"
            regexp: '<Directory />'
            line: |
                <Directory />
                        AllowOverride None
        notify: restart apache2
        when: '"AllowOverride" not in apache_ubuntu_4_3_root_directory.stdout'

      - name: "SCORED | 4.3 | PATCH | Ensure OverRide Is Disabled for the OS Root Directory | Remove AllowOverrideList element"
        lineinfile:
            path: "{{ apache2_cis_server_root_dir }}/apache2.conf"
            regexp: 'AllowOverrideList .*'
            state: absent
        notify: restart apache2
  when:
      - apache_cis_4_3
      - apache_cis_section4
  tags:
      - level1
      - level2
      - patch
      - rule_4.3

- name: "SCORED | 4.4 | PATCH | Ensure OverRide Is Disabled for All Directories"
  block:
      - name: "SCORED | 4.4 | PATCH | Ensure OverRide Is Disabled for All Directories | Set AllowOverride to None"
        replace:
            path: "{{ apache2_cis_server_root_dir }}/apache2.conf"
            regexp: 'AllowOverride.*'
            replace: 'AllowOverride None'
        notify: restart apache2

      - name: "SCORED | 4.4 | PATCH | Ensure OverRide Is Disabled for All Directories | Remove AllowOverrideList"
        lineinfile:
            path: "{{ apache2_cis_server_root_dir }}/apache2.conf"
            regexp: '^        AllowOverrideList'
            state: absent
        notify: restart apache2
  when:
      - apache_cis_4_4
      - apache_cis_section4
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_4.4

# Section 5 Fixes
- name: "SCORED | 5.1 | PATCH | Ensure Options for the OS Root Directory Are Restricted"
  block:
      - name: "SCORED | 5.1 | AUDIT | Ensure Options for the OS Root Directory Are Restricted | Get Root Directory Settings"
        shell: cat {{ apache2_cis_server_root_dir }}/apache2.conf | sed -n '/<Directory \/>/,/<\/Directory>/p'
        changed_when: false
        failed_when: false
        register: apache_ubuntu_5_1_root_directory

      - name: "SCORED | 5.1 | PATCH | Ensure Options for the OS Root Directory Are Restricted | Replace if Options exist"
        replace:
            path: "{{ apache2_cis_server_root_dir }}/apache2.conf"
            regexp: 'Options.*'
            replace: 'Options None'
            after: '<Directory />'
            before: '</Directory>'
        notify: restart apache2
        when: '"Options" in apache_ubuntu_5_1_root_directory.stdout'

      - name: "SCORED | 5.1 | PATCH | Ensure Options for the OS Root Directory Are Restricted | Enter Options if doesn't exist"
        lineinfile:
            path: "{{ apache2_cis_server_root_dir }}/apache2.conf"
            regexp: '<Directory />'
            line: |
                <Directory />
                         Options None
        notify: restart apache2
        when: '"Options" not in apache_ubuntu_5_1_root_directory.stdout'
  when:
      - apache_cis_5_1
      - apache_cis_section5
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_5.1

- name: "SCORED | 5.2 | PATCH | Ensure Options for the Web Root Directory Are Restricted"
  block:
      - name: "SCORED | 5.2 | PATCH | Ensure Options for the Web Root Directory Are Restricted | Get Document Root vHost settings"
        raw: cat /etc/apache2/apache2.conf | sed -n "/<Directory \"\/var\/www\/html\">/,/<\/Directory>/p"
        changed_when: false
        failed_when: false
        register: apache_rhel_5_2_vdir_doc_settings

      - name: "SCORED | 5.2 | PATCH | Ensure Options for the Web Root Directory Are Restricted | Get Document Root vHost settings"
        raw: cat /etc/apache2/apache2.conf
        changed_when: false
        failed_when: false
        register: test

      - name: "SCORED | 5.2 | PATCH | Ensure Options for the Web Root Directory Are Restricted | Escape path slashes"
        set_fact:
            apache_rhel_5_2_doc_root_dir: '{{ apache2_cis_doc_root_dir | replace("/","\/") }}'

      # - name: "SCORED | 5.2 | PATCH | Ensure Options for the Web Root Directory Are Restricted | Escape path slashes"
      #   set_fact:
      #       test_after: "{{ test | regex_search('<Directory \"\/var\/www\/html\">([\\s\\S]*?)<\/Directory>', multiline=True) }}"
      - debug: var=apache_ubuntu_5_2_vdir_doc_settings
      - debug: var=apache_ubuntu_5_2_doc_root_dir
      - debug: var=test_after

      - name: "SCORED | 5.2 | PATCH | Ensure Options for the Web Root Directory Are Restricted | Set options to None or Multiviews if options does not exist"
        lineinfile:
            path: "{{ apache2_cis_server_root_dir }}/conf/httpd.conf"
            line: '    Options {{ apache_cis_webrootdir_options }}'
            insertafter: '^<Directory "{{ apache2_cis_doc_root_dir }}>'
        when: "'Options' not in apache_ubuntu_5_2_vdir_doc_settings.stdout"

      - name: "SCORED | 5.2 | PATCH | Ensure Options for the Web Root Directory Are Restricted | Get Document Root vHost settings"
        shell: cat /etc/httpd/conf/httpd.conf | sed -n "/<Directory "{{ apache_ubuntu_5_2_doc_root_dir }}">/,/<\/Directory>/p"
        changed_when: false
        failed_when: false
        register: apache_ubuntu_5_2_vdir_doc_settings_2222222

      - debug: var=apache_ubuntu_5_2_vdir_doc_settings_2222222
      # - name: "SCORED | 5.2 | PATCH | Ensure Options for the Web Root Directory Are Restricted | Set options to None or Multiviews if options does not exist"
      #   replace:
      #       path: "{{ apache_cis_server_root_dir }}"
      #       replace: '    Options.*'
      #       replace: '    Options {{ apache_cis_webrootdir_options }}'
      #       after: '^<Directory "{{ apache_cis_doc_root_dir }}">'
      #       before: '^</Directory>'
  when:
      - apache_cis_5_2
      - apache_cis_section5
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_5.2
      - notimplimented

# -----------------------------
# -----------------------------
# Control 5.3/5.4requires dynamic changes to all <Directory> elements. Need to figure out best lineinfile way to handle this
# -----------------------------
# -----------------------------
- name: "SCORED | 5.3 | PATCH | Ensure Options for Other Directories Are Minimized"
  command: /bin/true
  changed_when: false
  failed_when: false
  when:
      - apache_cis_5_3
      - apache_cis_section5
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_5.3
      - notimplimented

- name: "SCORED | 5.4 | PATCH | Ensure Default HTML Content Is Removed"
  command: /bin/true
  changed_when: false
  failed_when: false
  when:
      - apache_cis_5_4
      - apache_cis_section5
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_5.4
      - notimplimented

- name: "SCORED | 5.5 | PATCH | Ensure the Default CGI Content printenv Script Is Removed"
  block:
      - name: "SCORED | 5.5 | AUDIT | Ensure the Default CGI Content printenv Script Is Removed | Get CGI folder"
        shell: cat {{ apache2_cis_server_root_dir }}/apache2.conf | grep -i "cgi-bin/" | grep -v "#" | cut -f2 -d'"'
        changed_when: false
        failed_when: false
        register: apache_ubuntu_5_5_cgi_bin_dir

      - name: "SCORED | 5.5 | PATCH | Ensure the Default CGI Content printenv Script Is Removed | Remove printenv"
        file:
            path: "{{ item }}/printenv"
            state: absent
        with_items:
            - "{{ apache_ubuntu_5_5_cgi_bin_dir.stdout_lines }}"
        when: apache_ubuntu_5_5_cgi_bin_dir.stdout != ""
  when:
      - apache_cis_5_5
      - apache_cis_section5
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_5.5

- name: "SCORED | 5.6 | PATCH | Ensure the Default CGI Content test-cgi Script Is Removed"
  block:
      - name: "SCORED | 5.6 | AUDIT | Ensure the Default CGI Content test-cgi Script Is Removed | Get CGI folder"
        shell: cat {{ apache2_cis_server_root_dir }}/conf/httpd.conf | grep -i "cgi-bin/" | grep -v "#" | cut -f2 -d'"'
        changed_when: false
        failed_when: false
        register: apache_ubuntu_5_6_cgi_bin_dir

      - name: "SCORED | 5.6 | PATCH | Ensure the Default CGI Content test-cgi Script Is Removed | Remove test-cgi folder"
        file:
            path: "{{ item }}/test-cgi"
            state: absent
        with_items:
            - "{{ apache_ubuntu_5_6_cgi_bin_dir.stdout_lines }}"
        when: apache_ubuntu_5_6_cgi_bin_dir.stdout != ""
  when:
      - apache_cis_5_6
      - apache_cis_section5
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_5.6

# -----------------------------
# -----------------------------
# Control 5.3/5.4requires dynamic changes to all <Directory> elements. Need to figure out best lineinfile way to handle this
# -----------------------------
# -----------------------------
- name: "SCORED | 5.7 | PATCH | Ensure HTTP Request Methods Are Restricted"
  block:
      - name: "SCORED | 5.7 | PATCH | Ensure HTTP Request Methods Are Restricted"
        shell: 'cat /etc/apache2/apache2.conf | sed -n "/<Directory \"\/var\/www\/html\">/,/<\/Directory>/p"'
        changed_when: false
        failed_when: false
        register: apache_ubuntu_5_7_vdir_doc_settings
  when:
      - apache_cis_5_7
      - apache_cis_section5
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_5.7
      - notimplimented

- name: "SCORED | 5.8 | PATCH | Ensure the HTTP TRACE Method Is Disabled"
  lineinfile:
      path: "{{ apache2_cis_server_root_dir }}/apache2.conf"
      regexp: 'TraceEnable.*'
      line: 'TraceEnable Off'
  notify: restart apache2
  when:
      - apache_cis_5_8
      - apache_cis_section5
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_5.8

- name: "SCORED | 5.9 | PATCH | Ensure Old HTTP Protocol Versions Are Disallowed"
  block:
      - name: "SCORED | 5.9 | PATCH | Ensure Old HTTP Protocol Versions Are Disallowed | Enable re-write module"
        apache2_module:
            name: rewrite
            state: present
            force: yes
        notify: restart apache2

      - name: "SCORED | 5.9 | AUDIT | Ensure Old HTTP Protocol Versions Are Disallowed | Check for .htaccess file"
        stat:
            path: "{{ apache2_cis_doc_root_dir }}/html/.htaccess"
        register: apache_ubuntu_5_9_htaccess_state

      - name: "SCORED | 5.9 | PATCH | Ensure Old HTTP Protocol Versions Are Disallowed | Create .htaccess file"
        blockinfile:
            path: "{{ apache2_cis_doc_root_dir }}/html/.htaccess"
            marker: "# {mark} document root settings ANSIBLE MANAGED BLOCK"
            create: yes
            block: |
                <Directory {{ apache2_cis_doc_root_dir }}>
                        Options Indexes FollowSymLinks
                        AllowOverride None
                        Require all granted
                </Directory>
        notify: restart apache2
        when: not apache_ubuntu_5_9_htaccess_state.stat.exists

      - name: "SCORED | 5.9 | PATCH | Ensure Old HTTP Protocol Versions Are Disallowed | Set re-write settings"
        lineinfile:
            path: "{{ apache2_cis_doc_root_dir }}/html/.htaccess"
            regexp: "{{ item.regexp }}"
            line: "{{ item.line }}"
        notify: restart apache2
        with_items:
            - { regexp: 'RewriteEngine .*', line: 'RewriteEngine On' }
            - { regexp: 'RewriteOptions .*', line: 'RewriteOptions Inherit'}
            - { regexp: 'RewriteCond .*', line: 'RewriteCond %{THE_REQUEST} !HTTP/1\.1$' }
            - { regexp: 'RewriteRule .*', line: 'RewriteRule .* - [F]' }
  when:
      - apache_cis_5_9
      - apache_cis_section5
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_5.9

- name: "SCORED | 5.10 | PATCH | Ensure Access to .ht* Files Is Restricted"
  block:
      - name: "SCORED | 5.10 | AUDIT | Ensure Access to .ht* Files Is Restricted | Does FilesMatch exist"
        shell: cat {{ apache2_cis_server_root_dir }}/apache2.conf | grep -ozP '<FilesMatch \"\^\\.ht\">([\S\s]*?)<\/FilesMatch>'
        changed_when: false
        failed_when: false
        register: apache_ubuntu_5_10_files_match_param

      - name: "SCORED | 5.10 | PATCH | Ensure Access to .ht* Files Is Restricted | Replace Require all setting"
        replace:
            path: "{{ apache2_cis_server_root_dir }}/apache2.conf"
            regexp: 'Require.*'
            replace: 'Require all denied'
            after: '<FilesMatch "\^\\.ht">'
            before: '</FilesMatch>'
        notify: restart apache2
        when: '"Require" in apache_ubuntu_5_10_files_match_param.stdout'

      - name: "SCORED | 5.10 | PATCH | Ensure Access to .ht* Files Is Restricted | Add Require setting if missing"
        lineinfile:
            path: "{{ apache2_cis_server_root_dir }}/apache2.conf"
            regexp: '<FilesMatch "\^\\.ht">'
            line: |
                <FilesMatch "^\.ht">
                    Require all denied
        notify: restart apache2
        when: '"Require" not in apache_ubuntu_5_10_files_match_param.stdout and apache_cis_5_10_files_match_param.stdout != ""'

      - name: "SCORED | 5.10 | PATCH | Ensure Access to .ht* Files Is Restricted | Add FilesMatch settings"
        blockinfile:
            path: "{{ apache2_cis_server_root_dir }}/apache2.conf"
            marker: "# {mark} FilesMatch ht Setting ANSIBLE MANAGED BLOCK"
            block: |
                <FilesMatch "^\.ht">
                    Require all denied
                </FilesMatch>
        notify: restart apache2
        when: apache_ubuntu_5_10_files_match_param.stdout == ""
  when:
      - apache_cis_5_10
      - apache_cis_section5
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_5.10

- name: "SCORED | 5.11 | PATCH | Ensure Access to Inappropriate File Extensions Is Restricted"
  block:
      - name: "SCORED | 5.11 | AUDIT | Ensure Access to Inappropriate File Extensions Is Restricted | Gather file extentions"
        shell: find {{ apache2_cis_doc_root_dir }} -type f -name '*.*' | awk -F. '{print $NF }' | sort -u
        changed_when: false
        failed_when: false
        register: apache_ubuntu_5_11_file_extentions

      - name: "SCORED | 5.11 | AUDIT | Ensure Access to Inappropriate File Extensions Is Restricted | Find FilesMatch for all files"
        shell: cat {{ apache2_cis_server_root_dir }}/apache2.conf | grep -ozP '<FilesMatch \"\^\.\*\$\">([\S\s]*?)<\/FilesMatch>'
        changed_when: false
        failed_when: false
        register: apache_ubuntu_5_11_files_match_1

      - name:  "SCORED | 5.11 | AUDIT | Ensure Access to Inappropriate File Extensions Is Restricted | Find FilesMatch for specified files"
        shell: cat {{ apache2_cis_server_root_dir }}/apache2.conf | grep -ozP '<FilesMatch \"\^\.\*\\.\(.*\)\$\"\>([\S\s]*?)<\/FilesMatch>'
        changed_when: false
        failed_when: false
        register: apache_ubuntu_5_11_files_match_2

      - name: "SCORED | 5.11 | PATCH | Ensure Access to Inappropriate File Extensions Is Restricted | Replace Require in FilesMatch for all files"
        replace:
            path: "{{ apache2_cis_server_root_dir }}/apache2.conf"
            regexp: 'Require.*'
            replace: 'Require all denied'
            after: '<FilesMatch "\^\.\*\$">'
            before: '</FilesMatch>'
        notify: restart apache2
        when: '"Require" in apache_ubuntu_5_11_files_match_1.stdout'

      - name: "SCORED | 5.11 | PATCH | Ensure Access to Inappropriate File Extensions Is Restricted | Add Require in FilesMatch for all files"
        lineinfile:
            path: "{{ apache2_cis_server_root_dir }}/apache2.conf"
            regexp: '<FilesMatch "\^\.\*\$">'
            line: |
                <FilesMatch "^.*$">
                    Require all denied
        notify: restart apache2
        when: '"Require" not in apache_ubuntu_5_11_files_match_1.stdout and apache_ubuntu_5_11_files_match_1.stdout != ""'

      - name: "SCORED | 5.11 | PATCH | Ensure Access to Inappropriate File Extensions Is Restricted | Add FilesMatch for all files if missing"
        blockinfile:
            path: "{{ apache2_cis_server_root_dir }}/apache2.conf"
            marker: "# {mark} FilesMatch All Settings ANSIBLE MANAGED BLOCK"
            block: |
                # Block all files by default, unless specifically allowed.
                <FilesMatch "^.*$">
                    Require all denied
                </FilesMatch>
        notify: restart apache2
        when: apache_ubuntu_5_11_files_match_1.stdout == ""

      - name: "SCORED | 5.11 | PATCH | Ensure Access to Inappropriate File Extensions Is Restricted | Set allowed file types"
        replace:
            path: "{{ apache2_cis_server_root_dir }}/apache2.conf"
            regexp: '<FilesMatch \"\^\.\*\\.\(.*\)\$\"\>'
            replace: '<FilesMatch "^.*\.({{ apache_cis_allowed_filetypes }})$">'
        notify: restart apache2
        when: '"<FilesMatch" in apache_ubuntu_5_11_files_match_2.stdout'

      - name: "SCORED | 5.11 | PATCH | Ensure Access to Inappropriate File Extensions Is Restricted | Replace Require for allowed file types"
        replace:
            path: "{{ apache2_cis_server_root_dir }}/apache2.conf"
            regexp: '    Require.*'
            replace: '    Require all granted'
            after: '<FilesMatch \"\^\.\*\\.\(.*\)\$\"\>'
            before: '</FilesMatch>'
        notify: restart apache2
        when: '"Require" in apache_ubuntu_5_11_files_match_2.stdout'

      - name: "SCORED | 5.11 | PATCH | Ensure Access to Inappropriate File Extensions Is Restricted | Add Require for allowed file types"
        lineinfile:
            path: "{{ apache2_cis_server_root_dir }}/apache2.conf"
            regexp: '<FilesMatch \"\^\.\*\\.\(.*\)\$\"\>'
            line: |
                <FilesMatch "^.*\.({{ apache_cis_allowed_filetypes }})$">
                    Require all granted
        notify: restart apache2
        when: '"Require" not in apache_ubuntu_5_11_files_match_2.stdout and apache_ubuntu_5_11_files_match_2.stdout != ""'

      - name: "SCORED | 5.11 | PATCH | Ensure Access to Inappropriate File Extensions Is Restricted | Add FilesMatch for allowed files if missing"
        blockinfile:
            path: "{{ apache2_cis_server_root_dir }}/apache2.conf"
            marker: "# {mark} FilesMatch File Type Settings ANSIBLE MANAGED BLOCK"
            block: |
                # Allow files with specifically approved file extensions
                # Such as (css, htm; html; js; pdf; txt; xml; xsl; ...),
                # images (gif; ico; jpeg; jpg; png; ...), multimedia
                <FilesMatch "^.*\.({{ apache_cis_allowed_filetypes }})$">
                    Require all granted
                </FilesMatch>
        notify: restart apache2
        when: apache_ubuntu_5_11_files_match_2.stdout == ""

      - name: "SCORED | 5.11 | AUDIT | Ensure Access to Inappropriate File Extensions Is Restricted | Display file extensions"
        debug:
            msg:
                - "Alert!! Below are the file extensions in use. Please review to make sure they are all approved"
                - "{{ apache_ubuntu_5_11_file_extentions.stdout_lines }}"
  when:
      - apache_cis_5_11
      - apache_cis_section5
  tags:
      - level2
      - scored
      - patch
      - rule_5.11

- name: "SCORED | 5.12 | PATCH | Ensure IP Address Based Requests Are Disallowed"
  block:
      - name: "SCORED | 5.12 | PATCH | Ensure IP Address Based Requests Are Disallowed | Enable re-write module"
        apache2_module:
            name: rewrite
            state: present
            force: yes
        notify: restart apache2

      - name: "SCORED | 5.12 | PATCH | Ensure IP Address Based Requests Are Disallowed | Check for htaccess file"
        stat:
            path: "{{ apache2_cis_doc_root_dir }}/html/.htaccess"
        register: apache_ubuntu_5_12_htaccess_state
      - debug: var=apache_ubuntu_5_12_htaccess_state

      - name: "SCORED | 5.12 | PATCH | Ensure IP Address Based Requests Are Disallowed | Create .htaccess file if needed"
        blockinfile:
            path: "{{ apache2_cis_doc_root_dir }}/html/.htaccess"
            marker: "# {mark} document root settings ANSIBLE MANAGED BLOCK"
            create: yes
            block: |
                <Directory {{ apache2_cis_doc_root_dir }}>
                        Options Indexes FollowSymLinks
                        AllowOverride None
                        Require all granted
                </Directory>
        notify: restart apache2
        when: not apache_ubuntu_5_12_htaccess_state.stat.exists

      - name: "SCORED | 5.12 | PATCH | Ensure IP Address Based Requests Are Disallowed | Set re-write settings"
        lineinfile:
            path: "{{ apache2_cis_doc_root_dir }}/html/.htaccess"
            regexp: "{{ item.regexp }}"
            line: "{{ item.line }}"
        notify: restart apache2
        with_items:
            - { regexp: 'RewriteEngine .*', line: 'RewriteEngine On'}
            - { regexp: 'RewriteCond %{HTTP_HOST}.*', line: 'RewriteCond %{HTTP_HOST} !^{{ apache_cis_toplevel_svr }} [NC]' }
            - { regexp: 'RewriteCond %{REQUEST_URI}.*', line: 'RewriteCond %{REQUEST_URI} !^/error [NC]' }
            - { regexp: 'RewriteRule \^\.\(\.\*\).*', line: 'RewriteRule ^.(.*) - [L,F]' }
  when:
      - apache_cis_5_12
      - apache_cis_section5
  tags:
      - level2
      - scored
      - patch
      - rule_5.12

- name: "SCORED | 5.13 | PATCH | Ensure the IP Addresses for Listening for Requests Are Specified"
  block:
      - name: "SCORED | 5.13 | PATCH | Ensure the IP Addresses for Listening for Requests Are Specified | Remove Listen"
        lineinfile:
            path: "{{ apache2_cis_server_root_dir }}/ports.conf"
            regexp: '^Listen.*'
            state: absent
        notify: restart apache2

      - name: "SCORED | 5.13 | PATCH | Ensure the IP Addresses for Listening for Requests Are Specified"
        lineinfile:
            path: "{{ apache2_cis_server_root_dir }}/ports.conf"
            line: 'Listen {{ item }}'
            insertafter: '# prevent Apache from glomming onto all bound IP addresses'
        with_items:
            - "{{ apache_cis_listen_ip_port }}"
        notify: restart apache2
  when:
      - apache_cis_5_13
      - apache_cis_section5
  tags:
      - level2
      - scored
      - patch
      - rule_5.13

- name: "SCORED | 5.14 | PATCH | Ensure Browser Framing Is Restricted"
  block:
      - name: "SCORED | 5.14 | PATCH | Ensure Browser Framing Is Restricted | Enable headers module"
        apache2_module:
            name: headers
            state: present
            force: yes
        notify: restart apache2

      - name: "SCORED | 5.14 | PATCH | Ensure Browser Framing Is Restricted | Set header settings"
        lineinfile:
            path: "{{ apache2_cis_server_root_dir }}/conf-enabled/security.conf"
            regexp: '^Header.*'
            line: 'Header always append X-Frame-Options SAMEORIGIN'
            insertafter: '# Supplemental configuration'
        notify: restart apache2
  when:
      - apache_cis_5_14
      - apache_cis_section5
  tags:
      - level2
      - scored
      - patch
      - rule_5.14

# Section 6 Fixes
- name: |
        "SCORED | 6.1 | PATCH | Ensure the Error Log Filename and Severity Level Are Configured Correctly"
        "SCORED | 6.2 | PATCH | Ensure a Syslog Facility Is Configured for Error Logging"
  block:
      - name: "SCORED | 6.1 | PATCH | Ensure the Error Log Filename and Severity Level Are Configured Correctly | Add LogLevel setting"
        lineinfile:
            path: "{{ apache2_cis_server_root_dir }}/apache2.conf"
            regexp: '^LogLevel'
            line: 'LogLevel {{ apache_cis_loglevel.all_mods }} core:{{ apache_cis_loglevel.core_mod }}'
        notify: restart apache2
        when:
            - apache_cis_6_1

      - name: "SCORED | 6.1 | PATCH | Ensure the Error Log Filename and Severity Level Are Configured Correctly | Add ErrorLog path"
        lineinfile:
            path: "{{ apache2_cis_server_root_dir }}/apache2.conf"
            regexp: '^ErrorLog'
            line: 'ErrorLog "{{ apache_cis_errorlog_path }}/error.log"'
        notify: restart apache2
        when:
            - apache_cis_6_1
            - not apache_cis_6_2

      - name: "SCORED | 6.2 | PATCH | Ensure a Syslog Facility Is Configured for Error Logging | Add ErrorLog path set to system:local1"
        lineinfile:
            path: "{{ apache2_cis_server_root_dir }}/apache2.conf"
            regexp: '^ErrorLog'
            line: 'ErrorLog "syslog:{{ apache_cis_errorlog_facility }}"'
        notify: restart apache2
        when:
            - apache_cis_6_2
            - not apache_cis_6_1

      - name: |
              "SCORED | 6.1 | PATCH | Ensure the Error Log Filename and Severity Level Are Configured Correctly | Add combined ErrorLog"
              "SCORED | 6.2 | PATCH | Ensure a Syslog Facility Is Configured for Error Logging | Add combined ErrorLog"
        lineinfile:
            path: "{{ apache2_cis_server_root_dir }}/apache2.conf"
            regexp: '^ErrorLog.*'
            line: 'ErrorLog "{{ apache_cis_errorlog_path }} syslog:{{ apache_cis_errorlog_facility }}"'
        notify: restart apache2
        when:
            - apache_cis_6_1
            - apache_cis_6_2

      - name: "SCORED | 6.1 | AUDIT | Ensure the Error Log Filename and Severity Level Are Configured Correctly | Alert about virtual Directories"
        debug:
            msg:
                - "Caution!! If you are using virutal directories please add the ErrorLog directive."
                - "Each responsible individual or organization needs to access their own web logs and and needs the"
                - "skills/training/tools for monitoring the logs."
  when:
      - apache_cis_6_1 or apache_cis_6_2
      - apache_cis_section6
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_6.1
      - rule_6.2

# -----------------------------
# -----------------------------
# Control 6.2 combined with control 6.1
# -----------------------------
# -----------------------------

- name: "SCORED | 6.3 | PATCH | Ensure the Server Access Log Is Configured Correctly"
  block:
      - name: "SCORED | 6.3 | PATCH | Ensure the Server Access Log Is Configured Correctly | Remove LogFormat"
        lineinfile:
            path: "{{ apache2_cis_server_root_dir }}/apache2.conf"
            regexp: '^LogFormat .*'
            state: absent
        notify: restart apache2

      - name: "SCORED | 6.3 | PATCH | Ensure the Server Access Log Is Configured Correctly | Add/Modify LogFormat and CustomLog"
        lineinfile:
            path: "{{ apache2_cis_server_root_dir }}/apache2.conf"
            regexp: "{{ item.regexp }}"
            line: "{{ item.line }}"
        notify: restart apache2
        with_items:
            - { regexp: '^LogFormat "', line: 'LogFormat {{ apache_cis_log_format }} combined' }
            - { regexp: '^CustomLog .*', line: 'CustomLog "{{ apache_cis_custom_log }}/access.log" combined' }

      - name: "SCORED | 6.3 | AUDIT | Ensure the Server Access Log Is Configured Correctly | Notify about need for vhost logging"
        debug:
            msg:
                - "Caution!! If you are using virtual directories please add the LogFormat and and CustomLog directives"
                - "if you have different people responsible for each web site. Each responsible individual or organization"
                - "needs access to their own web logs as well as the skills/training/tools for monitoring the logs"
  when:
      - apache_cis_6_3
      - apache_cis_section6
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_6.3

- name: "SCORED | 6.4 | PATCH | Ensure Log Storage and Rotation Is Configured Correctly"
  block:
      - name: "SCORED | 6.4 | PATCH | Ensure Log Storage and Rotation Is Configured Correctly | Edit logrotate.d/httpd"
        lineinfile:
            path: /etc/logrotate.d/apache2
            regexp: "{{ item.regexp }}"
            line: "{{ item.line }}"
            insertafter: "{{ item.insertafter }}"
        with_items:
            - { regexp: '^        missingok', line: '        missingok', insertafter: '^/var/log/apache2/' }
            - { regexp: '^        notifempty', line: '        notifempty', insertafter: '^/var/log/apache2/' }
            - { regexp: '^        sharedscripts', line: '        sharedscripts', insertafter: '^/var/log/apache2/' }
            - { regexp: '^        postrotate', line: '        postrotate', insertafter: '^/var/log/apache2/' }
            - { regexp: '^                /bin', line: "                /bin/kill -HUP 'cat /var/run/apache2/apache2.pid 2>/dev/null' 2> /dev/null || true", insertafter: '    postrotate' }

      - name: "SCORED | 6.4 | PATCH | Ensure Log Storage and Rotation Is Configured Correctly | Edit logrotate.conf"
        lineinfile:
            path: /etc/logrotate.conf
            regexp: "{{ item.regexp }}"
            line: "{{ item.line }}"
            insertafter: "{{ item.insertafter }}"
        with_items:
            - { regexp: '^# rotate log files ', line: '# rotate log files weekly', insertafter: '^# see' }
            - { regexp: '^daily|weekly|monthly|yearly', line: 'weekly', insertafter: '^# rotate log files' }
            - { regexp: '^# keep ([^\s]+) ([^\s]+) worth of backlogs', line: '# keep 13 weeks worth of backlogs', insertafter: '^# see'}
            - { regexp: '^rotate', line: 'rotate 13', insertafter: '^# keep'}
  when:
      - apache_cis_6_4
      - apache_cis_section6
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_6.4

- name: "SCORED | 6.5 | PATCH | Ensure Applicable Patches Are Applied"
  apt:
      name: "[{{ apache_cis_extra_packages }}]"
      state: latest
  when:
      - apache_cis_6_4
      - apache_cis_section6
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_6.4

- name: "SCORED | 6.6 | PATCH | Ensure ModSecurity Is Installed and Enabled"
  block:
      - name: "SCORED | 6.6 | PATCH | Ensure ModSecurity Is Installed and Enabled | Install security module"
        apt:
            name: libapache2-mod-security2
            state: present

      - name: "SCORED | 6.6 | PATCH | Ensure ModSecurity Is Installed and Enabled | Enable security module"
        apache2_module:
            name: security2
            state: present
            force: yes
  when:
      - apache_cis_6_6
      - apache_cis_section6
  tags:
      - level2
      - scored
      - patch
      - rule_6.6

- name: "SCORED | 6.7 | PATCH | Ensure the OWASP ModSecurity Core Rule Set Is Installed and Enabled"
  block:
      - name: "SCORED | 6.7 | PATCH | Ensure the OWASP ModSecurity Core Rule Set Is Installed and Enabled | Install OWASP RHEL8"
        apt:
            name: modsecurity-crs
            state: present

      - name: "SCORED | 6.7 | AUDIT | Ensure the OWASP ModSecurity Core Rule Set Is Installed and Enabled | Apply Configuration"
        template:
            src: crs-setup.conf.j2
            dest: "/etc/modsecurity/crs/crs-setup.conf"
        when:
            - apache_cis_owasp_automate

      - name: "SCORED | 6.7 | AUDIT | Ensure the OWASP ModSecurity Core Rule Set Is Installed and Enabled | Message out when not automated"
        debug:
            msg:
                - "ALERT!!!!To conform to CIS standards you need OWASP installed and enabled"
                - "Please go through the process of setup"
        when: not apache_cis_owasp_automate
  when:
      - apache_cis_6_7
      - apache_cis_section6
  tags:
      - level2
      - scored
      - audit
      - rule_6.7

